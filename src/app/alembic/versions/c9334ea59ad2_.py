"""empty message

Revision ID: c9334ea59ad2
Revises: 
Create Date: 2023-05-14 15:17:28.990220

"""
from alembic import op
import sqlalchemy as sa

from core.models import PositiveInteger

# revision identifiers, used by Alembic.
revision = 'c9334ea59ad2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('birth_date', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('book',
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('author', sa.String(length=255), nullable=False),
    sa.Column('isbn', sa.String(length=13), nullable=False),
    sa.Column('pages', PositiveInteger(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bookrequest',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('book_id', sa.UUID(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userbook',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('book_id', sa.UUID(), nullable=False),
    sa.Column('condition', sa.Enum('GOOD', 'WELL', 'NORMAL', 'BAD', 'VERY_BAD', name='conditionenum'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bookexchange',
    sa.Column('book_request_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('CREATED', 'PROCESSING', 'VALIDATED', 'SUCCESS', 'FAILED', name='bookexchangestatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('exchanged_at', sa.DateTime(), nullable=False),
    sa.Column('requested_book', sa.UUID(), nullable=False),
    sa.Column('book_in_exchange', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['book_in_exchange'], ['userbook.id'], ),
    sa.ForeignKeyConstraint(['book_request_id'], ['bookrequest.id'], ),
    sa.ForeignKeyConstraint(['requested_book'], ['book.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_book_mtm_book_request_association_table',
    sa.Column('user_book_id', sa.UUID(), nullable=False),
    sa.Column('book_request_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['book_request_id'], ['bookrequest.id'], ),
    sa.ForeignKeyConstraint(['user_book_id'], ['userbook.id'], ),
    sa.PrimaryKeyConstraint('user_book_id', 'book_request_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_book_mtm_book_request_association_table')
    op.drop_table('bookexchange')
    op.drop_table('userbook')
    op.drop_table('bookrequest')
    op.drop_table('book')
    op.drop_table('user')
    op.drop_table('category')
    # ### end Alembic commands ###
